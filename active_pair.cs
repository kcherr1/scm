/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class active_pair : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal active_pair(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(active_pair obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~active_pair() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SCMPINVOKE.delete_active_pair(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public active_pair() : this(SCMPINVOKE.new_active_pair__SWIG_0(), true) {
  }

  public active_pair(scm_file f, scm_cache c) : this(SCMPINVOKE.new_active_pair__SWIG_1(scm_file.getCPtr(f), scm_cache.getCPtr(c)), true) {
  }

  public scm_file file {
    set {
      SCMPINVOKE.active_pair_file_set(swigCPtr, scm_file.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = SCMPINVOKE.active_pair_file_get(swigCPtr);
      scm_file ret = (cPtr == global::System.IntPtr.Zero) ? null : new scm_file(cPtr, false);
      return ret;
    } 
  }

  public scm_cache cache {
    set {
      SCMPINVOKE.active_pair_cache_set(swigCPtr, scm_cache.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = SCMPINVOKE.active_pair_cache_get(swigCPtr);
      scm_cache ret = (cPtr == global::System.IntPtr.Zero) ? null : new scm_cache(cPtr, false);
      return ret;
    } 
  }

}
